name: "[Nethermind] Raiko Client SP1 - Docker build and push"

on:
  workflow_dispatch:
  push:
    branches: [main]
    tags:
      - "v*"
    paths:
      - "provers/sp1/**"
      - "!docs/**"
      - "!**/README.md"
      - "!docker/**"
      - "!.github/**"

env:
  DOCKER_REGISTRY: nethermind.jfrog.io
  DOCKER_USERNAME: modular
  DOCKER_REPOSITORY_DEV: modular-oci-local-dev/raiko-client-sp1
  DOCKER_REPOSITORY_STAGING: modular-oci-local-staging/raiko-client-sp1
  DOCKER_PUBLIC_REGISTRY: docker.io
  DOCKER_PUBLIC_REPOSITORY: nethermind
  DOCKER_PUBLIC_IMAGE_NAME: raiko-client-sp1

jobs:
  build:
    name: Build and push docker image
    runs-on: [self-hosted, linux, x64]  # Custom runner labels
    if: github.repository == 'NethermindEth/raiko'
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            short: amd64

    outputs:
      digest-amd64: ${{ steps.digest.outputs.amd64 }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_MODULAR_TOKEN_DEVELOPER }}

      - name: Docker meta for dev
        id: meta-dev
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPOSITORY_DEV }}
          tags: |
            type=raw,value=latest
            type=ref,event=tag
            type=sha,prefix={{branch}}-

      - name: Build and push with tags
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.zk
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta-dev.outputs.tags }}
          labels: ${{ steps.meta-dev.outputs.labels }}

      - name: Set digest output
        id: digest
        run: |
          echo "amd64=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPOSITORY_DEV }}@${{ steps.build.outputs.digest }}" >> $GITHUB_OUTPUT

  merge:
    name: Create manifest and promote to staging
    runs-on: [self-hosted, linux, x64]  # Custom runner
    needs: build
    steps:
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_MODULAR_TOKEN_DEVELOPER }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPOSITORY_DEV }}
          tags: |
            type=raw,value=latest
            type=ref,event=tag

      - name: Create manifest list and push
        run: |
          docker buildx imagetools create \
            $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            ${{ needs.build.outputs.digest-amd64 }}

      - name: Setup ORAS
        uses: oras-project/setup-oras@v1

      - name: Check ORAS version
        run: oras version

      - name: Login to registry with ORAS
        run: |
          oras login ${{ env.DOCKER_REGISTRY }} \
            -u ${{ env.DOCKER_USERNAME }} \
            -p ${{ secrets.ARTIFACTORY_MODULAR_TOKEN_DEVELOPER }}

      - name: Promote to Staging
        run: |
          echo "${{ steps.meta.outputs.tags }}" | while IFS= read -r tag; do
            echo "Current tag: $tag"
            tag=$(echo "$tag" | xargs)
            tag_suffix="${tag##*:}"
            source_image="${DOCKER_REGISTRY}/${DOCKER_REPOSITORY_DEV}:${tag_suffix}"
            staging_image="${DOCKER_REGISTRY}/${DOCKER_REPOSITORY_STAGING}:${tag_suffix}"
            echo "Promoting ${source_image} to ${staging_image}"
            oras cp -r "${source_image}" "${staging_image}"
          done

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_PUBLIC_REGISTRY }}
          username: ${{ secrets.DOCKER_PUBLIC_USERNAME }}
          password: ${{ secrets.DOCKER_PUBLIC_PASSWORD }}

      - name: Promote to Public Repository
        run: |
          echo "${{ steps.meta.outputs.tags }}" | while IFS= read -r tag; do
            echo "Current tag: $tag"
            tag=$(echo "$tag" | xargs)
            tag_suffix="${tag##*:}"
            source_image="${DOCKER_REGISTRY}/${DOCKER_REPOSITORY_DEV}:${tag_suffix}"
            public_image="${DOCKER_PUBLIC_REGISTRY}/${DOCKER_PUBLIC_REPOSITORY}/${DOCKER_PUBLIC_IMAGE_NAME}:${tag_suffix}"
            echo "Promoting ${source_image} to ${public_image}"
            oras cp -r "${source_image}" "${public_image}"
          done

      - name: Summary
        run: |
          echo "## SP1 Docker build completed âœ…" >> $GITHUB_STEP_SUMMARY
          echo "### Tags" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" | while IFS= read -r TAG; do
            echo "- $TAG" >> $GITHUB_STEP_SUMMARY
          done
          echo "### Notes" >> $GITHUB_STEP_SUMMARY
          echo "- The images have been pushed to ${DOCKER_REPOSITORY_STAGING} repo" >> $GITHUB_STEP_SUMMARY
          echo "- The images have been promoted to public Docker Hub" >> $GITHUB_STEP_SUMMARY
          echo "- **Dev Repository**: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPOSITORY_DEV }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Staging Repository**: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPOSITORY_STAGING }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Public Repository**: ${{ env.DOCKER_PUBLIC_REGISTRY }}/${{ env.DOCKER_PUBLIC_REPOSITORY }}/${DOCKER_PUBLIC_IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Platforms**: linux/amd64" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
